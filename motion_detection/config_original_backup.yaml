# Motion Detection Configuration

# ===============================
# INPUT COLOR PROCESSING
# ===============================
processing_mode: "grayscale"        # Options: "grayscale", "hsv", "rgb", "ycrcb"
# Apply this as the first step: convert input image to chosen color space using cvtColor()

# HSV Color Filtering (only used when processing_mode = "hsv")
hsv_lower_h: 0                      # Lower bound for Hue (0-179, typical: 0-30 for warm colors)
hsv_lower_s: 30                     # Lower bound for Saturation (0-255, typical: 30-100 for colored objects)
hsv_lower_v: 60                     # Lower bound for Value (0-255, typical: 60-150 to avoid shadows)
hsv_upper_h: 20                     # Upper bound for Hue (0-179, typical: 10-40 for warm colors)
hsv_upper_s: 150                    # Upper bound for Saturation (0-255, typical: 100-255 for vibrant colors)
hsv_upper_v: 255                    # Upper bound for Value (0-255, typical: 150-255 for well-lit objects)

# ===============================
# IMAGE PREPROCESSING
# ===============================
contrast_enhancement: true          # Apply CLAHE (make pixels more uniformly distributed)
blur_type: "gaussian"               # Options: "none", "gaussian", "median", "bilateral"
# Apply blur and contrast enhancement immediately after color conversion
# If blur_type != "none", apply the specified smoothing filter
# If contrast_enhancement == true && processing_mode == "grayscale", apply CLAHE

# Contrast Enhancement (CLAHE) - only used when contrast_enhancement = true
clahe_clip_limit: 3.0               # Clip limit for CLAHE (1.0-5.0, higher = more contrast)
clahe_tile_size: 8                  # CLAHE tile size (4-16, must be even, larger = smoother)

# Blur Parameters - only used when blur_type != "none"
gaussian_blur_size: 7               # Gaussian blur kernel size (3-15, odd numbers only, larger = more blur)
median_blur_size: 5                 # Median blur kernel size (3-15, odd numbers only, good for noise)
bilateral_d: 15                     # Bilateral filter diameter (5-25, larger = more smoothing)
bilateral_sigma_color: 75           # Bilateral filter sigma color (10-150, higher = more color smoothing)
bilateral_sigma_space: 75           # Bilateral filter sigma space (10-150, higher = more spatial smoothing)

# ===============================
# MOTION DETECTION METHODS
# ===============================
#Background subtraction helps determine what is moving and what is not.
background_subtraction: true        # Enable background subtraction
background_subtraction_method: "MOG2"  # Options: "none", "MOG2", "PBAS" (uses KNN internally)
#Using PBAS vs MOG2:

#PBAS is better for 
#   - dynamic backgrounds, but slower.
#   - detecting small, fast, and sudden movements.

#MOG2 is better for 
#   - static backgrounds, but faster.
#   - detecting large, slow, and gradual movements.

# Optical flow helps for trajectory analysis. For now we will not use it.
optical_flow_mode: "none"           # Options: "none", "farneback", "lucas-kanade" 
motion_history_duration: 0          # Seconds (0 = disabled)
# Use background subtraction to produce a binary mask before thresholding
# If optical_flow_mode != "none", compute flow and use it to guide/augment detection
# If motion_history_duration > 0, accumulate a motion trail for visualization

# Background Subtraction (MOG2) - only used when background_subtraction_method = "MOG2"
background_history: 300             # Background history length (100-1000, higher = more stable but slower adaptation)
background_threshold: 40            # Background subtraction threshold (10-50, higher = less sensitive to small changes)
background_detect_shadows: false    # Detect shadows (true/false, can help but may increase noise)

# Background Subtraction (PBAS) - only used when background_subtraction_method = "PBAS"
pbas_history: 500                   # PBAS history length (200-1000, higher = more stable background model)
pbas_threshold: 25.0                # PBAS threshold (10-40, higher = less sensitive to small movements)
pbas_learning_rate: 0.01            # PBAS learning rate (0.001-0.1, higher = faster adaptation but more noise)
pbas_detect_shadows: true           # PBAS detect shadows (true/false, helps with lighting changes)

# ===============================
# THRESHOLDING
# ===============================
threshold_type: "binary"            # Options: "binary", "adaptive", "otsu"
# When to use each thresholding method:
#   - binary: when you want to quickly separate moving objects from background.
#   - adaptive: when you want to handle varying lighting conditions.
#   - otsu: when you want to automatically find the best threshold value.

# Thresholding Parameters (only used when threshold_type = "binary")
threshold_value: 40                 # Threshold for binary thresholding (10-100, higher = less sensitive to small changes)
max_threshold: 255                  # Maximum value for binary threshold operation (typically 255)

# Adaptive Thresholding - only used when threshold_type = "adaptive"
adaptive_block_size: 11             # Block size for adaptive threshold (3-25, odd numbers only, larger = smoother)
adaptive_c: 2                       # Constant subtracted from mean (-10 to 10, higher = darker threshold)

# ===============================
# MORPHOLOGICAL OPERATIONS
# ===============================
morphology: true                    # Enable all morphology steps
morph_kernel_size: 7                # Kernel size for all operations (3-15, odd numbers only, larger = more aggressive)
morph_close: true                   # Fill holes in object (applied first, good for solid objects)
morph_open: true                    # Remove noise blobs (applied second, good for cleaning up)
dilation: true                      # Expand object (applied third, good for connecting nearby objects)
erosion: false                      # Shrink object (applied last, use sparingly as it reduces object size)
# Apply in this order: close → open → dilation → erosion using same kernel

# ===============================
# CONTOUR PROCESSING
# ===============================
convex_hull: true                   # Wrap contours in convex hull (good for irregular shapes)
contour_approximation: true         # Reduce contour complexity with approxPolyDP() (faster processing)
contour_filtering: true             # Filter small or invalid contours
min_contour_area: 200               # Filter by minimum area (100-2000, higher = filter smaller movements)
max_contour_aspect_ratio: 3.0       # Filter by max width/height ratio (1.5-5.0, higher = allow longer objects)
min_contour_solidity: 0.3           # Solidity = area / convex_hull_area (0.3-0.9, higher = more solid objects)
# After finding contours: filter by shape, apply convex hull or approximation

# Contour Approximation - only used when contour_approximation = true
contour_epsilon_factor: 0.03        # Approximation accuracy factor (0.01-0.1, lower = more accurate but slower)

# Edge Detection (Canny) - optional enhancement
canny_low_threshold: 50             # Canny low threshold (10-100, lower = more edges detected)
canny_high_threshold: 150           # Canny high threshold (50-300, higher = fewer but stronger edges)

# ===============================
# OBJECT TRACKING
# ===============================
max_tracking_distance: 200          # Maximum distance to track moving objects (50-500, higher = track objects moving faster)
max_trajectory_points: 30           # Maximum trail length for visualization (10-100, higher = longer trails)
min_trajectory_length: 25           # Minimum trajectory points required to record an object (5-50, higher = more stable objects)

# Spatial Merging - Group overlapping or nearby bounding boxes
spatial_merging: true               # Enable spatial merging of nearby detections
spatial_merge_distance: 100         # Maximum distance to merge boxes (20-100, higher = merge more aggressively)
spatial_merge_overlap_threshold: 0.1 # Minimum overlap ratio to merge (0.1-0.8, higher = require more overlap)

# Motion-Based Clustering - Group objects with similar motion vectors
motion_clustering: true             # Enable motion-based clustering
motion_similarity_threshold: 0.5    # Cosine similarity threshold for motion vectors (0.5-0.9, higher = more strict)
motion_history_frames: 3            # Number of frames to analyze motion history (3-10, higher = more stable but slower)

# Motion Smoothing
smoothing_factor: 0.7               # Smoothing for more stable tracking (0.1-0.9, higher = smoother but less responsive)
min_tracking_confidence: 0.6        # Minimum confidence threshold to maintain tracking (0.1-0.9, higher = more strict tracking)

# ===============================
# OBJECT CLASSIFICATION
# ===============================
enable_classification: true          # Enable object classification using SqueezeNet
model_path: "models/squeezenet.onnx" # Path to the SqueezeNet ONNX model
labels_path: "models/imagenet_labels.txt" # Path to ImageNet labels
classification_confidence_threshold: 0.3 # Minimum confidence to accept classification (0.1-1.0)
classification_interval: 10         # Classify objects every N frames (1-30, lower = more frequent)

# ===============================
# VISUALIZATION & OUTPUT
# ===============================
split_screen: true                  # Show original + processed side-by-side
draw_contours: true                 # Draw detected object outlines
data_collection: true               # Enable save or log for detections
save_on_motion: true                # Only save frames where motion is detected
# Display occurs at end of frame pipeline, optionally saves annotated images

# Visualization Settings
split_screen_window_name: "Motion Detection - Split Screen View"

# Data Collection Settings
cleanup_old_data: true              # Delete old data on startup
image_format: "png"                 # Format for saving cropped images

# MongoDB Configuration
mongodb_uri: "mongodb://localhost:27017"
database_name: "birds_of_play"
collection_prefix: "motion_tracking"

# ===============================
# DEVELOPMENT & DEBUGGING
# ===============================
logging:
  log_level: "debug"  # Options: "trace", "debug", "info", "warn", "error", "critical", "off"
  log_to_file: true
  log_file_path: "birdsofplay.log"

debug:
  split_screen: true                # Show split-screen debug view 